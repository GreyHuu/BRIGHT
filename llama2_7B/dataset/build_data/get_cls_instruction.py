def get_system_prompt():
    return "For the given Relation and its corresponding Relation Description, we supply an Input entity and several Output entities. We carefully specify some of these provided Output entities have valid links to the Input entity, while others do not. Note that Input entities are accurate, but Output entities may be either reasonable or unreasonable in their alignment with the provided Relation. Your task is to identify which Output entities align with the provided Relation and classify them as reasonable or unreasonable. Base your judgments on the provided relationship description, ensuring your decisions are clear and unambiguous."


def get_relation_prompts(current_relation):
    relation_prompts = {
        "Antonym":
            """
           "Antonym" relationship refers to the relationship between two entities that are opposite or contradictory in meaning. When two entities have an antonym relationship, their meanings are opposite.
            """,
        "AtLocation":
            """
            "AtLocation" indicates where an entity (object, concept, etc.) is generally found. It describes a potential and universal connection between location and subject. This means that if an entity is associated with the "AtLocation" relationship, we can expect to find it at the described location typically.
            """,
        "CapableOf":
            """
            The "CapableOf" relation is used to express the actions that an entity (which can be a thing, activity, or concept) is capable of or able to perform. This relationship emphasizes the potential ability or possibility of the entity, with a certain degree of unrealized nature, rather than indicating that the entity will definitely engage in corresponding behavior.
            """,
        "Causes":
            """
            When the relationship "A Causes B" exists, it means that the occurrence of entity A will lead to the occurrence of entity B. "A" is the cause or triggering factor for the appearance of "B". This type of relationship provides information about causal relationships between event entities and helps in inferring and understanding the contextual environment.
            """,
        "CausesDesire":
            """
            "CausesDesire" is a unique relationship that describes how one entity (concept or situation) triggers or arouses the desires or needs of another entity. This relationship captures a dynamic process of "causing desire," explicitly establishing a causal connection whereby certain circumstances or objects can generate specific expectations or cravings.
            """,
        "CreatedBy":
            """
            "CreatedBy" indicates that an entity or concept is created or generated by a specific person, group, entity, or process. This relationship helps to clarify the origin or creator of a concept and is very helpful for understanding its history and background.
            """,
        "DefinedAs":
            """
            The "DefinedAs" relationship is a semantic relationship used to define an entity or concept. If there exists a "DefinedAs" relationship connecting entity A to entity B, it means that "A is defined as B" or "B is the definition of A". This relationship helps clarify and deepen our understanding of the source entity concept.
            """,
        "DerivedFrom":
            """
            The "DerivedFrom" indicates that one entity is derived or evolved from another entity. If there is a "DerivedFrom" relationship between A and B, it can be understood that A is formed or developed based on B.
            """,
        "Desires":
            """
            "Desires" indicate what an entity (which could be a person, animal, or other concept) might want or expect to obtain from another entity (which could be a goal or other concept). The "Desires" relationship does not imply that the entity will definitely get what it expects, but merely indicates that the entity might want to do so.
            """,
        "DistinctFrom":
            """
            The "DistinctFrom" relationship indicates that two entities are clearly different or unique. This relationship highlights significant differences in key characteristics between the two entities, even if they may have some similarities. "A DistinctFrom B" means that concept A and concept B are distinct from each other and fundamentally different.
            """,
        "EtymologicallyDerivedFrom":
            """
            The relationship "EtymologicallyDerivedFrom" indicates that one entity’s etymology or historical origin is derived from another entity. Sometimes, an entity may originate from the corresponding entity in another language.
            """,
        "EtymologicallyRelatedTo":
            """
            The "EtymologicallyRelatedTo" relationship indicates that two entities are related in terms of etymology, i.e., they share some commonality in their history, origin, or formation process. This relationship typically exists in situations where word entities come from the same root.
            """,
        "FormOf":
            """
            The "FormOf" relationship describes a kind of morphological change relationship, indicating that a word or phrase entity is a different form of another word or phrase entity. "form" can include singular and plural forms, verb tense changes, and equivalent forms in other languages.
            """,
        "HasA":
            """
            The "HasA" relationship is used to express a kind of "ownership relationship". It represents that an entity has a particular attribute or characteristic, especially on a physical or concrete level. For two entities A and B, if A "HasA" B, it means that A has the characteristic or attribute of B.
            """,
        "HasContext":
            """
            The "HasContext" relationship indicates the usage of a word or phrase entity in a specific context or background. The "HasContext" relationship can be understood as "in the context of..." or "in the scenario of...", highlighting the contextual dependency of vocabulary and emphasizing its application and understanding in specific scenarios.
            """,
        "HasFirstSubevent":
            """
            "HasFirstSubevent" is a semantic relationship that exists between an event entity and the first sub-event entity that immediately starts within it. If there are two event entities, A and B, and B is the first sub-event that occurs when A happens, then we can say A "HasFirstSubevent" B. This relationship can aid in understanding the structure and flow of event entities.
            """,
        "HasLastSubevent":
            """
            "HasLastSubevent" is a semantic relationship that indicates the last sub-event entity in the occurrence of a specific event entity. It identifies the final stage or action in a more significant event, helping to determine the moment of event completion in the understanding and implementation process. 
            """,
        "HasPrerequisite":
            """
            The  "HasPrerequisite"  relationship represents the prerequisite knowledge or conditions required before understanding or carrying out a concept, event, or action. If there is "A HasPrerequisite B" between A and B entities, it means that we need to first understand or satisfy B before understanding or executing A. This type of relationship is used to represent a kind of sequential, causal, or orderly association.
            """,
        "HasProperty":
            """
            "HasProperty" essentially signifies that an entity possesses a particular attribute or characteristic. When a "HasProperty" relationship exists between two entities, it implies that the first entity possesses the property or characteristic described by the second entity. This relationship aids in describing and understanding the properties of a given concept.
            """,
        "HasSubevent":
            """
            "HasSubevent" is used to indicate that an event entity often includes or triggers one or more specific sub-event entities. "HasSubevent" represents a kind of parent-child relationship where the parent event entity encompasses the child event entity in terms of time, logic, or steps.
            """,
        "IsA":
            """
            "IsA" indicates that an entity (i.e., a word or phrase) is an instance or subclass of a broader entity. ’’A IsA B’’ indicates A is considered a special case or subclass of the entity of B. It helps to understand and determine the classification of concepts and the inclusive relationship between entities.
            """,
        "LocatedNear":
            """
            The "LocatedNear" relationship describes the spatial proximity between two entities. If A and B have a "LocatedNear" relationship, it means that in physical space, A is usually located near B or within a relatively close distance range. This proximity can be from physical space or other space.
            """,
        "MadeOf":
            """
            The "MadeOf" relationship indicates that an entity comprises another or several different entities. This relationship is often used to describe an entity (item or substance)'s constituent elements or construction materials.
            """,
        "MannerOf":
            """
            The "MannerOf" relationship describes how a concept or action entity manifests or implements another more general concept or action entity in a certain way. We can interpret "A MannerOf B" as A is a way or form of B.
            """,
        "MotivatedByGoal":
            """
            The "MotivatedByGoal" relationship connects an action or behavior entity with the potential goal entity that drives it, which implies the original motivation for completing a specific behavior."A MotivatedByGoal B" means that "doing A is usually to achieve B".
            """,
        "ObstructedBy":
            """
            The  "ObstructedBy" relationship indicates that there is some kind of obstruction or obstacle to a certain entity (object, event, or situation), and because of this obstacle, it cannot proceed or be carried out well. "A ObstructedBy B" means that entity B hinders or obstructs the existence, occurrence, or progress of entity A to some extent.
            """,
        "PartOf":
            """
            "PartOf" relationship signifies that one entity is a part of another more extensive or more complex entity. This relationship describes sub-concepts or components that make up larger concepts or entities.
            """,
        "ReceivesAction":
            """
            "ReceivesAction" describes the ability of an entity (usually an object or concept ) to accept or perform a specific action. "A ReceivesAction B" means that entity A can accept or is capable of performing actions of entity B.
            """,
        "RelatedTo":
            """
            The "RelatedTo" relationship refers to a certain association or connection between two entities. This could be because they belong to the same category, or they frequently appear together in a particular environment or scenario, or one concept is often used to explain another concept.
            """,
        "SimilarTo":
            """
            "SimilarTo" represents the semantic similarity or relevance between two entities. This relationship can indicate that two entities can be used interchangeably to a certain extent, or in some contexts, one concept can refer to or replace another.
            """,
        "SymbolOf":
            """
            The "SymbolOf" relationship indicates that an entity (symbol or concept) represents, symbolizes, or signifies a larger or more abstract entity. "A SymbolOf B" relationship describes the symbolic representation relationship, with the source entity A as a symbol, implying the meaning of the target entity B.
            """,
        "Synonym":
            """
            The "Synonym" relationship indicates two different entities (words or phrases) are completely identical in meaning. The "Synonym" relationship emphasizes that these two vocabularies can be interchanged in a specific context without changing the basic meaning of the sentence. 
            """,
        "UsedFor":
            """ 
            The "UsedFor" relationship represents the purpose or effect for which an entity is used for another entity. "A UsedFor B" means the functionality or utility of entity A is used for B.
            """
    }
    try:
        result = relation_prompts[current_relation]
    except KeyError:
        return None
    return result


def get_instruction(current_relation, input, output, reasonable, unreasonable):

    system_prompt = get_system_prompt()
    relation_description = get_relation_prompts(current_relation)
    if not system_prompt and not relation_description:
        return ""
    current = f"""
    <s>
    [INST]
    <<SYS>>
        {system_prompt}
    <</SYS>>
        Relation:{current_relation}
        Relation Description:{relation_description}
        Input entity:{input}
        Output entities:{",".join(output)}
    [/INST]
        Reasonable:{",".join(reasonable)}
        Unreasonable:{",".join(unreasonable)}
    </s>
    """
    return current.replace("\n", "")
