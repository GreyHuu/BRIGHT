def get_system_prompt():

    return "Your task is knowledge graph completion by generating a series of novel entity pairs for a given entity and relation. For each relation I provide, you need to comprehend the characteristics and implications of that relation. Based on a given entity combined with that relation, generate new entities that could plausibly be the other component of the entity pair for that relation. The entities you generate should help enrich the knowledge graph with new information. Be creative yet logical when proposing new entities. Strive for diversity in your responses."


def get_common_relation_prompt(current_relation):

    return f'You need to find possible related concepts for a given concept based on the "{current_relation}" relationship. ' \
           f'It should be noted that not all "{current_relation}" relationships of concepts are obvious or apparent, ' \
           f'so you need to fully understand and analyze the context to find the most likely matching concept.'


def get_relation_prompts(current_relation):

    relation_prompts = {
        "Antonym":
            """
           "Antonym" relationship refers to the relationship between two entities that are opposite or contradictory in meaning. When two entities have an antonym relationship, their meanings are opposite.
            """,
        "AtLocation":
            """
            "AtLocation" indicates where an entity (object, concept, etc.) is generally found. It describes a potential and universal connection between location and subject. This means that if an entity is associated with the "AtLocation" relationship, we can expect to find it at the described location typically.
            """,
        "CapableOf":
            """
            The "CapableOf" relation is used to express the actions that an entity (which can be a thing, activity, or concept) is capable of or able to perform. This relationship emphasizes the potential ability or possibility of the entity, with a certain degree of unrealized nature, rather than indicating that the entity will definitely engage in corresponding behavior.
            """,
        "Causes":
            """
            When the relationship "A Causes B" exists, it means that the occurrence of entity A will lead to the occurrence of entity B. "A" is the cause or triggering factor for the appearance of "B". This type of relationship provides information about causal relationships between event entities and helps in inferring and understanding the contextual environment.
            """,
        "CausesDesire":
            """
            "CausesDesire" is a unique relationship that describes how one entity (concept or situation) triggers or arouses the desires or needs of another entity. This relationship captures a dynamic process of "causing desire," explicitly establishing a causal connection whereby certain circumstances or objects can generate specific expectations or cravings.
            """,
        "CreatedBy":
            """
            "CreatedBy" indicates that an entity or concept is created or generated by a specific person, group, entity, or process. This relationship helps to clarify the origin or creator of a concept and is very helpful for understanding its history and background.
            """,
        "DefinedAs":
            """
            The "DefinedAs" relationship is a semantic relationship used to define an entity or concept. If there exists a "DefinedAs" relationship connecting entity A to entity B, it means that "A is defined as B" or "B is the definition of A". This relationship helps clarify and deepen our understanding of the source entity concept.
            """,
        "DerivedFrom":
            """
            The "DerivedFrom" indicates that one entity is derived or evolved from another entity. If there is a "DerivedFrom" relationship between A and B, it can be understood that A is formed or developed based on B.
            """,
        "Desires":
            """
            "Desires" indicate what an entity (which could be a person, animal, or other concept) might want or expect to obtain from another entity (which could be a goal or other concept). The "Desires" relationship does not imply that the entity will definitely get what it expects, but merely indicates that the entity might want to do so.
            """,
        "DistinctFrom":
            """
            The "DistinctFrom" relationship indicates that two entities are clearly different or unique. This relationship highlights significant differences in key characteristics between the two entities, even if they may have some similarities. "A DistinctFrom B" means that concept A and concept B are distinct from each other and fundamentally different.
            """,
        "EtymologicallyDerivedFrom":
            """
            The relationship "EtymologicallyDerivedFrom" indicates that one entity’s etymology or historical origin is derived from another entity. Sometimes, an entity may originate from the corresponding entity in another language.
            """,
        "EtymologicallyRelatedTo":
            """
            The "EtymologicallyRelatedTo" relationship indicates that two entities are related in terms of etymology, i.e., they share some commonality in their history, origin, or formation process. This relationship typically exists in situations where word entities come from the same root.
            """,
        "FormOf":
            """
            The "FormOf" relationship describes a kind of morphological change relationship, indicating that a word or phrase entity is a different form of another word or phrase entity. "form" can include singular and plural forms, verb tense changes, and equivalent forms in other languages.
            """,
        "HasA":
            """
            The "HasA" relationship is used to express a kind of "ownership relationship". It represents that an entity has a particular attribute or characteristic, especially on a physical or concrete level. For two entities A and B, if A "HasA" B, it means that A has the characteristic or attribute of B.
            """,
        "HasContext":
            """
            The "HasContext" relationship indicates the usage of a word or phrase entity in a specific context or background. The "HasContext" relationship can be understood as "in the context of..." or "in the scenario of...", highlighting the contextual dependency of vocabulary and emphasizing its application and understanding in specific scenarios.
            """,
        "HasFirstSubevent":
            """
            "HasFirstSubevent" is a semantic relationship that exists between an event entity and the first sub-event entity that immediately starts within it. If there are two event entities, A and B, and B is the first sub-event that occurs when A happens, then we can say A "HasFirstSubevent" B. This relationship can aid in understanding the structure and flow of event entities.
            """,
        "HasLastSubevent":
            """
            "HasLastSubevent" is a semantic relationship that indicates the last sub-event entity in the occurrence of a specific event entity. It identifies the final stage or action in a more significant event, helping to determine the moment of event completion in the understanding and implementation process. 
            """,
        "HasPrerequisite":
            """
            The  "HasPrerequisite"  relationship represents the prerequisite knowledge or conditions required before understanding or carrying out a concept, event, or action. If there is "A HasPrerequisite B" between A and B entities, it means that we need to first understand or satisfy B before understanding or executing A. This type of relationship is used to represent a kind of sequential, causal, or orderly association.
            """,
        "HasProperty":
            """
            "HasProperty" essentially signifies that an entity possesses a particular attribute or characteristic. When a "HasProperty" relationship exists between two entities, it implies that the first entity possesses the property or characteristic described by the second entity. This relationship aids in describing and understanding the properties of a given concept.
            """,
        "HasSubevent":
            """
            "HasSubevent" is used to indicate that an event entity often includes or triggers one or more specific sub-event entities. "HasSubevent" represents a kind of parent-child relationship where the parent event entity encompasses the child event entity in terms of time, logic, or steps.
            """,
        "IsA":
            """
            "IsA" indicates that an entity (i.e., a word or phrase) is an instance or subclass of a broader entity. ’’A IsA B’’ indicates A is considered a special case or subclass of the entity of B. It helps to understand and determine the classification of concepts and the inclusive relationship between entities.
            """,
        "LocatedNear":
            """
            The "LocatedNear" relationship describes the spatial proximity between two entities. If A and B have a "LocatedNear" relationship, it means that in physical space, A is usually located near B or within a relatively close distance range. This proximity can be from physical space or other space.
            """,
        "MadeOf":
            """
            The "MadeOf" relationship indicates that an entity comprises another or several different entities. This relationship is often used to describe an entity (item or substance)'s constituent elements or construction materials.
            """,
        "MannerOf":
            """
            The "MannerOf" relationship describes how a concept or action entity manifests or implements another more general concept or action entity in a certain way. We can interpret "A MannerOf B" as A is a way or form of B.
            """,
        "MotivatedByGoal":
            """
            The "MotivatedByGoal" relationship connects an action or behavior entity with the potential goal entity that drives it, which implies the original motivation for completing a specific behavior."A MotivatedByGoal B" means that "doing A is usually to achieve B".
            """,
        "ObstructedBy":
            """
            The  "ObstructedBy" relationship indicates that there is some kind of obstruction or obstacle to a certain entity (object, event, or situation), and because of this obstacle, it cannot proceed or be carried out well. "A ObstructedBy B" means that entity B hinders or obstructs the existence, occurrence, or progress of entity A to some extent.
            """,
        "PartOf":
            """
            "PartOf" relationship signifies that one entity is a part of another more extensive or more complex entity. This relationship describes sub-concepts or components that make up larger concepts or entities.
            """,
        "ReceivesAction":
            """
            "ReceivesAction" describes the ability of an entity (usually an object or concept ) to accept or perform a specific action. "A ReceivesAction B" means that entity A can accept or is capable of performing actions of entity B.
            """,
        "RelatedTo":
            """
            The "RelatedTo" relationship refers to a certain association or connection between two entities. This could be because they belong to the same category, or they frequently appear together in a particular environment or scenario, or one concept is often used to explain another concept.
            """,
        "SimilarTo":
            """
            "SimilarTo" represents the semantic similarity or relevance between two entities. This relationship can indicate that two entities can be used interchangeably to a certain extent, or in some contexts, one concept can refer to or replace another.
            """,
        "SymbolOf":
            """
            The "SymbolOf" relationship indicates that an entity (symbol or concept) represents, symbolizes, or signifies a larger or more abstract entity. "A SymbolOf B" relationship describes the symbolic representation relationship, with the source entity A as a symbol, implying the meaning of the target entity B.
            """,
        "Synonym":
            """
            The "Synonym" relationship indicates two different entities (words or phrases) are completely identical in meaning. The "Synonym" relationship emphasizes that these two vocabularies can be interchanged in a specific context without changing the basic meaning of the sentence. 
            """,
        "UsedFor":
            """ 
            The "UsedFor" relationship represents the purpose or effect for which an entity is used for another entity. "A UsedFor B" means the functionality or utility of entity A is used for B.
            """,
        # reverse relation
        "LocatedAt":
            """
            "LocatedAt" is the inverse relation of "AtLocation". "LocatedAt" refers to an object or entity being located or found in a specific position or environment. In comparison to "AtLocation", the focus of "LocatedAt" is primarily on the location rather than the object being placed. "LocatedAt" represents the reverse of the "AtLocation" relation, meaning that object A is located within object B, which contrasts with the perspective of "AtLocation". 
            """,
        "PerformedBy":
            """
            "PerformedBy" is the inverse relationship of "CapableOf". "PerformedBy" refers to the action or task being executed by a specific entity, object, or individual. This relationship emphasizes the executor of the action rather than their capability. In comparison to "CapableOf", the focus of "PerformedBy" lies in highlighting who performed the action rather than what abilities that entity possesses. "PerformedBy" can be seen as the origin of an action, describing its actual occurrence, while "CapableOf" depicts potentiality or capability.
            """,
        "CausedBy":
            """
            "CausedBy" is the inverse relationship of "Causes". The "CausedBy" relationship refers to a phenomenon, event, or object B being the result or cause of phenomenon, event, or object A. If there is a "CausedBy" relationship connecting A and B, it means that B is caused by A. In comparison to the "Causes" relationship, the direction and meaning of the "CausedBy" relationship are opposite. If "B is CausedBy A", then we can understand that B arises due to the occurrence of A. The "CausedBy" relationship provides a perspective for tracing back from result to cause, which complements the perspective provided by the "Causes" relationship.
            """,
        "DesireCausedBy":
            """
            "DesireCausedBy" is a unique relationship that describes how an entity, concept, or situation is triggered by the desires or needs of another entity. This relationship captures the dynamic process of being "caused by desire," establishing a clear causal connection where specific expectations or cravings can be triggered by specific environments or objects.
            """,
        "Creates":
            """
            "Creates" is the inverse relationship of "CreatedBy". The "Creates" relationship indicates that a certain entity or subject has generated or created another entity. If A "Creates" B, it can be understood as A creating B, or B being created by A. Compared to "CreatedBy", the subject and object in "Creates" have exchanged positions. In comparison to the "CreatedBy" relationship, if B is created by A, then in this inverse relationship of "Creates", A creates B. In "Creates", the subject performing the creation action comes first, followed by the object being created.
            """,
        "Defines":
            """
            "Defines" is the inverse relationship of "DefinedAs". "Defines" refers to the definition or description of one concept or term by another concept or term. The direction of this relationship is from the definer to the defined. In comparison to the "DefinedAs", the direction of the relationship in "Defines" is reversed. In the "Defines" relationship, the source concept or term provides the definition or description, while the target concept or term receives it. This inverse relationship emphasizes the explanation and elucidation provided by the source concept or term for the target concept or term.
            """,
        "DerivesInto":
            """
            "DerivesInto" is the inverse relationship of "DerivedFrom". "DerivesInto" refers to how a concept, word, or phrase evolves or transforms into another concept, word, or phrase. While the "DerivedFrom" relationship expresses where a word or phrase comes from or originates, the "DerivesInto" relationship emphasizes how this word or phrase will develop or transform. In comparison to "DerivedFrom", the "DerivesInto" relationship focuses more on the outcome rather than the origin.            
            """,
        "IsDesiredBy":
            """
            "IsDesiredBy" is the inverse relationship of "Desires". "IsDesiredBy" refers to an object or activity being desired or needed by a subject (usually a person or object). In comparison to "Desires", the main difference of "IsDesiredBy" lies in reflecting the state of an object or activity being desired or needed, rather than the subject's desire or need for the object or activity. The focus of the "Desires" relationship is on the subject's needs and desires, while the focus of the "IsDesiredBy" relationship is on the state of an object or activity being needed or desired. 
            """,
        "EtymologicallyGaveRiseTo":
            """
            "EtymologicallyGaveRiseTo" is the inverse relationship of "EtymologicallyDerivedFrom". "EtymologicallyGaveRiseTo" refers to a word or phrase that serves as the origin of another word or phrase in etymology. It means that through some form of change, development, or transformation, this word or phrase gave rise to another one. In comparison to the "EtymologicallyDerivedFrom", the focus of the "EtymologicallyGaveRiseTo" relationship lies on the source word, emphasizing its position and role in etymological history as the starting point for lexical changes and developments.
            """,
        "IsFormOf":
            """
            The concept of 'IsFormOf' is the inverse relationship of 'FormOf'. 'IsFormOf' refers to the basic or most primitive form of a word or phrase, which serves as the foundation for deriving other lexical forms. In comparison to the 'FormOf', within 'IsFormOf' relationship, we start from a derived form of a word and trace it back to its original or fundamental form. This type of relationship helps us understand the etymology of vocabulary and derivational relationships between words.
            """,
        "IsAOf":
            """
            "IsAOf" is the inverse relationship of "HasA". "IsAOf" refers to the concept that if concept A is "IsAOf" concept B, then we can understand that concept B includes or has concept A. In this relationship, concept A is an attribute or component of concept B. In comparison to the "HasA" relationship, the direction of the "IsAOf" relationship is reversed; it points from specific attributes or components towards larger concepts or entities that contain those attributes or components. This relationship helps in understanding the composition and attributes of concepts, as well as how they are interconnected with each other.            
            """,
        "IsContextOf ":
            """
            "IsContextOf" is the inverse relationship of "HasContext". "IsContextOf" refers to a specific word or phrase being included or applicable within a certain background or context. This relationship emphasizes the influence and decisive role of the background or context on the word or phrase. In comparison to the "HasContext", the directionality of "IsContextOf" is opposite. While "HasContext" points from the word or phrase towards its specific background or context, "IsContextOf" points from the background or context towards the words or phrases used within that particular setting. 
            """,
        "IsFirstSubeventOf":
            """
            "IsFirstSubeventOf" is the inverse relationship of "HasFirstSubevent". "IsFirstSubeventOf" refers to an event or action being the first sub-event of another complex event or action. The existence of this relationship implies that the beginning or early stage of a complex event or action is typically triggered by or composed of this first sub-event. In comparison to the "HasFirstSubevent", the perspective of "IsFirstSubeventOf" is reversed. While the "HasFirstSubevent" relationship starts from the perspective of a complex event or action in order to identify its first sub-event, "IsFirstSubeventOf" starts from the perspective of a sub-event in order to determine which complex event or action it serves as the first sub-event for.
            """,
        "IsLastSubeventOf":
            """
            "IsLastSubeventOf" is the inverse relationship of "HasLastSubevent". "IsLastSubeventOf" refers to an event or action being the last sub-event in a sequence of events or actions. It describes this relationship from the perspective of the last sub-event, rather than from the perspective of the main event that includes this sub-event. In comparison to the "HasLastSubevent", "IsLastSubeventOf" focuses more on describing how a sub-event is positioned at the end of a larger sequence of events or actions.            
            """,
        "IsPrerequisiteOf":
            """
            "IsPrerequisiteOf" is the inverse relationship of "HasPrerequisite". "IsPrerequisiteOf" refers to the existence of something or a concept as a prerequisite in order to achieve the existence or occurrence of another thing or concept. In comparison to the "HasPrerequisite", the perspective of "IsPrerequisiteOf" focuses more on starting from the prerequisite and observing its impact and role on the result. The emphasis here is that the prerequisite is the starting point, while the result or goal is the endpoint.            
            """,
        "IsPropertyOf":
            """
            "IsPropertyOf" is the inverse relationship of "HasProperty". "IsPropertyOf" refers to a semantic relationship that describes the ownership of object properties, indicating that a certain characteristic or attribute belongs to a specific entity. In comparison to the "HasProperty", the perspective of the "IsPropertyOf" relationship has changed. It starts from the property of an entity and points towards the entity that owns this property. This shift in perspective allows us to query or understand related entities from the standpoint of their properties, rather than solely understanding their properties starting from the entities themselves. 
            """,
        "IsSubeventOf":
            """
            "IsSubeventOf" is the inverse relationship of "HasSubevent". "IsSubeventOf" refers to an event or action being a part of another larger event or action. The key aspect of this inverse relationship lies in the reversal of directionality. In comparison to the "HasSubevent", the "IsSubeventOf" relationship starts from the perspective of the sub-event, describing how it becomes a part of a larger event. 
            """,
        "ParentOf":
            """
            "ParentOf" is the inverse relationship of "IsA". "ParentOf" refers to an entity having a certain characteristic or component. In comparison to the "IsA" relationship, the emphasis of the "ParentOf" relationship is on the characteristics or components of an entity, rather than classification or species relationships. In an "IsA" relationship, if A is a type of B, then A inherits all attributes from B. In a "ParentOf" relationship, B does not inherit all attributes from A just because it possesses A; instead, it means that B has the characteristic or component similar to A.
            """,
        "ComponentOf":
            """
            "ComponentOf" is the inverse relationship of "MadeOf". The basic meaning of "ComponentOf" is that one thing is a component of another larger or more complex thing. This concept emphasizes the relationship between the constituent elements and the whole they form, rather than what parts make up the whole. In comparison to the "MadeOf", the perspective of "ComponentOf" starts from the viewpoint of an element, looking at which larger thing this element is a part of. Therefore, the focus of "ComponentOf" lies in emphasizing the position and function of individual elements within a whole, rather than just their existence as facts.
            """,
        "ManifestationOf":
            """
            "ManifestationOf" is the inverse relationship of "MannerOf". It refers to a concept or thing being an obvious expression or embodiment of another concept or thing. If we have "A ManifestationOf B", it means that "A" is a specific manifestation or appearance of "B". In comparison to the "MannerOf", the directionality of the "ManifestationOf" relationship is opposite. While the "MannerOf" relationship indicates that "A" exists or occurs in the manner of "B", the "ManifestationOf" relationship implies that "B" manifests or appears in the form of "A". 
            """,
        "EnablesGoal":
            """
            "EnablesGoal" is the inverse relationship of "MotivatedByGoal". The "EnablesGoal" relationship refers to an action or behavior that makes the achievement of a goal possible. This relationship indicates the potential connection and possibility between actions and outcomes. In comparison to the "MotivatedByGoal", the "EnablesGoal" relationship views goal attainment from the perspective of actions, focusing on describing how specific behaviors facilitate or contribute to achieving goals. This relationship emphasizes the enabling and driving force between actions and goals, rather than just the motivation or drive behind those actions.
            """,
        "Obstructs":
            """
            "Obstructs" is the inverse relationship of "ObstructedBy". "Obstructs" refers to a type of relationship where one concept or entity hinders the actions or processes of another concept or entity. The focus of this inverse relationship is primarily on the initiator of the obstructive behavior, highlighting who is actively causing obstruction and exerting influence over other entities or concepts. In comparison to "ObstructedBy", "Obstructs" emphasizes agency and impact.             
            """,
        "HasPart":
            """
            The relationship 'HasPart' is the inverse of the 'PartOf' relationship. 'HasPart' refers to a concept or entity that includes a part or element. When we say 'A HasPart B', it means that B is a part or member of A, and A contains B. In comparison to the 'PartOf' relationship, the 'HasPart' relationship switches the positions of subject and object.         
            """,
        "PerformsAction":
            """
            "PerformsAction" is the inverse relationship of "ReceivesAction". "PerformsAction" refers to an entity actively carrying out an action or task. This action or task is typically expressed as a verb, representing the activity or behavior of the entity. In comparison to "ReceivesAction", emphasis is placed on agency and activeness. In "ReceivesAction", the entity is the passive recipient of an action or event, whereas in "PerformsAction", the entity is the active agent executing the action. This constitutes the main distinction between these two relationships.
            """,
        "SymbolizedBy":
            """
            "SymbolizedBy" is the inverse relationship of "SymbolOf". "SymbolizedBy" refers to how a concept or thing is represented through specific symbols or signs. It represents the mapping relationship from symbols to the entities or concepts they originally represent. In comparison to "SymbolOf", "SymbolizedBy" emphasizes more on how symbols can represent and symbolize specific things or concepts, rather than how things or concepts are represented by symbols. If we express this inverse relationship in ConceptNet, it can be stated as: (symbol, "SymbolizedBy", entity/concept). This is a relationship from a symbol to the entity or concept it represents.
            """,
        "HasUsage":
            """
            "HasUsage" is the inverse relationship of "UsedFor". "HasUsage" refers to the specific purpose or function that a particular entity or thing possesses. When we say something "HasUsage", our main focus is on the thing itself and the purposes or functions it can provide. In comparison to the "UsedFor" relationship, the emphasis of the "HasUsage" relationship is more on the thing or entity itself rather than its usage.             
            """
    }
    try:
        result = relation_prompts[current_relation] + get_common_relation_prompt(current_relation)
    except KeyError:
        return None
    return result


def get_instruction(current_relation, input, output, sim_input_ouput):
    system_prompt = get_system_prompt()
    relation_prompt = get_relation_prompts(current_relation)
    if not system_prompt and not relation_prompt:
        return ""
    current = f"""
    <s>
    [INST]
    <<SYS>>
        {system_prompt}
    <</SYS>>
        {relation_prompt}
        Relation:{current_relation}
        Input entity:{input}
    [/INST]
        Output entities:{",".join(output)}
    </s>
    """
    sim = ""
    for item in sim_input_ouput:
        input = item["input"]
        output = item["output"]
        if isinstance(output, list):
            sim = sim + f"""
            <s>
            [INST]
            Relation:{current_relation}
            Input entity:{input}
            [/INST]
                Output entities:{",".join(output)}
            </s>
            """
    return (current + sim).replace("\n", "")

# print(get_instruction("PartOf", "leg", ["animal"]).)
